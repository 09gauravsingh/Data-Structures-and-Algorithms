from crio.io import PrintMatrix
from typing import List
class Solution:
    def __init__(self, matrix: List[List[int]]):
        self.matrix = matrix

    def rotateImage(self):
        l, r = 0, n-1
        while l < r:
            for i in range(r-l):
                top, bottom = l, r
                
                #save the topleft
                topLeft = matrix[top][l + i]

                #move bottom to topleft
                matrix[top][l + i] = matrix[bottom - i][l]

                #move bottomRight to bottomLeft
                matrix[bottom - i][l] = matrix[bottom][r - i]

                #move topRight to bottomRight
                matrix[bottom][r - i] = matrix[top + i][r]

                #move topLeft to topRight
                matrix[top + i][r] = topLeft

            l += 1
            r -= 1
                

if __name__ == '__main__':
    n = int(input())
    matrix = []
    for i in range(n):
        nums = input().split()
        nums = [int(i) for i in nums]
        matrix.append(nums)
    sol = Solution(matrix)
    sol.rotateImage()
    PrintMatrix.SquareMatrix(sol.matrix)



  
